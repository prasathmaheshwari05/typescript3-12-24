2-12-24

typescript:-

-it is super set of js
-it is compile languages
-it is strict typed languages

*how to know ts is available or not
*how to insatll typescript

npm i -g typescript // to install typescript
tsc -v //check typescrit version

* how to execute typescript file
npx tsc filename.ts  //


oops:-
1-class: 
-it is collection of data-member and memeber function.
-it is template which we can re-use
-to create class we use keyword.
reuse the template

---constructor: it is special member function of class
            - it will execute  automatically when class object get created or initialised
            - in ts constructor name must only constructor

=======================================================================================================
3-12-24

* inheritance:--

-accessing parent class property into child class.
-to perform inheritance in between classes we use extends keyword.

-super()-
-it represent parent class constructor inside child class constructor
-super method must be first statement in child class constructor

4.Encapsulation:

-wrapping of data  into single unit.
-public:we can  access class property  inside ,outside class as well as in derived class(child classes). 
-protected:we can  access class property  inside same class as well as in derived class(child classes). 
-private:we can  access class property  inside same class only



5.Abstraction:
-hiding implementation and showing necessary information.
-we can achive this by using interface,abstract class.

6.Polymorphism: it is ability to take more than one form
                -method overloading: when we have multiple method with same name in same class
                -method over riding:when we have multiple method with same name in different class

*module:
-writting ts code in single or multiple fileand access it in  another file 
-to achive this we use export and import keywords
-to send data we use export keyword 
-to access it we use imort keyword


*interface:--

-it is signature of class
-it contain abstract method
-to create interface we use interface keyword
-its child class has responsibility to implement it
-to implement interface we use implement keyword
